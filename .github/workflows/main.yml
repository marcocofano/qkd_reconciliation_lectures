name: Build and Release LaTeX PDF

on:
  push:
    branches:
    - "main"
  pull_request:
  create:  # Run release stage when a tag is pushed
    tags:
      - '*' 

jobs:
  build:
    name: Build LaTeX PDF
    if: "!contains(github.event.head_commit.message, 'chore(release)')"
    runs-on: ubuntu-latest  # Using Ubuntu for LaTeX environment
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Docker Image
        id: cache-docker
        uses: actions/cache@v3
        with:
          path: /tmp/.docker-cache
          key: texlive-docker-${{ runner.os }}-latest
          restore-keys: texlive-docker-${{ runner.os }}-
          
      - name: Pull LaTeX Docker Image (if not cached)
        run: |
          if [ ! -d "/tmp/.docker-cache" ]; then
            docker pull ghcr.io/xu-cheng/texlive-full:latest
            mkdir -p /tmp/.docker-cache
            docker save ghcr.io/xu-cheng/texlive-full:latest -o /tmp/.docker-cache/texlive-image.tar
          else
            docker load -i /tmp/.docker-cache/texlive-image.tar
          fi

      - name: Compile LaTeX to PDF inside Docker
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace ghcr.io/xu-cheng/texlive-full:latest /bin/sh -c "
            cd src && make report && mv main.pdf ../output.pdf
          "

      - name: Upload PDF as artifact
        uses: actions/upload-artifact@v4
        with:
          name: Compiled-PDF
          path: QKD_reconciliation_lectures.pdf

  build-slidev:
    name: Build Slidev Export Artifact
    if: "!contains(github.event.head_commit.message, 'chore(release)')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '23'  # adjust as needed

      - name: Install Slidev dependencies
        working-directory: slides/
        run: npm install

      - name: Build Slidev export
        working-directory: slides/
        run: npm run export:slides

      - name: Upload Slidev export artifact
        uses: actions/upload-artifact@v4
        with:
          name: Slidev-Export
          path: slides/

  release:
    name: Create Release
    needs: build
    if: github.event_name == 'create' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: install lua
      uses: leafo/gh-actions-lua@v9

    - name: Download PDF artifact
      uses: actions/download-artifact@v4
      with:
        name: Compiled-PDF
        path: ./

    - name: Download Slidev export artifact
      uses: actions/download-artifact@v4
      with:
        name: Slidev-Export
        path: ./

    - name: Get Version from TAG
      run: |
        echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: Generate release notes
      run: |
        lua scripts/generate_release_notes.lua ${{ env.VERSION }} > ${{ github.workspace }}-RELEASE_NOTES.md

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        name: "Release ${{ env.VERSION }}"
        body_path: ${{ github.workspace }}-RELEASE_NOTES.md
        files: |
          "QKD_reconciliation_lectures.pdf"
          "slides/slides-export.pdf"


